load("@rules_rust//rust:defs.bzl", "rust_library", "rust_static_library", "rust_shared_library", "rust_test")
load("@rules_rust//wasm_bindgen:wasm_bindgen.bzl", "rust_wasm_bindgen")
load("@crate_index//:defs.bzl", "aliases", "all_crate_deps")
load("@aspect_rules_js//js:defs.bzl", "js_binary")

package(default_visibility = ["//visibility:public"])

CLIENT_DATA = [
    "upload_source_data_mutation.graphql",
]

SRCS = glob([
    "*.rs",
])

PROC_MACRO_DEPS = all_crate_deps(
    proc_macro = True,
)

DEPS = all_crate_deps(
    normal = True,
) + [
    "//src/api/artifacts:artifacts_api_rust_proto",
]

rust_library(
    name = "client",
    srcs = SRCS,
    aliases = aliases(),
    data = CLIENT_DATA,
    proc_macro_deps = PROC_MACRO_DEPS,
    deps = DEPS,
    features = ["rust"],
)

rust_static_library(
    name = "client_static",
    srcs = SRCS,
    aliases = aliases(),
    data = CLIENT_DATA,
    proc_macro_deps = PROC_MACRO_DEPS,
    deps = DEPS,
    features = ["cpp"],
)

rust_shared_library(
    name = "client_wasm",
    srcs = SRCS,
    aliases = aliases(),
    data = CLIENT_DATA,
    proc_macro_deps = PROC_MACRO_DEPS,
    deps = DEPS,
    features = ["wasm"],
)

rust_wasm_bindgen(
    name = "client_bundler_wasm_bindgen",
    target ="nodejs",
    wasm_file = ":client_wasm",
)

rust_test(
    name = "test",
    aliases = aliases(),
    crate = ":client",
    crate_features = [
        "bazel",
    ],
    data = CLIENT_DATA + glob([
        "testdata/*",
    ]),
    proc_macro_deps = all_crate_deps(
        proc_macro = True,
    ),
    deps = all_crate_deps(
        normal = True,
    ) + [
        "@rules_rust//tools/runfiles",
    ],
)

# TODO(doug): Generate this automatically instead of manually
cc_library(
    name = "cpp_bindings",
    srcs = [
        "generated/rust_cxx.cpp",
    ],
    hdrs = [
        "generated/rust_cxx.h",
    ],
    include_prefix = "observation-tools",
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "//src/client/rust:client_static",
    ],
)

js_binary(
    name = "wasm_test",
    data = [
        ":client_bundler_wasm_bindgen",
    ],
    entry_point = "wasm_test.js",
)