/**
 * CSS files with the .module.css suffix will be treated as CSS modules
 * and scoped locally.
 */

p {
    color: var(--ifm-color-content-secondary);
}

@media screen and (max-width: 966px) {
    .main {
        --ifm-pre-padding: 0.5rem;
        --ifm-code-font-size: 65%;
    }

    h3 {
        font-size: 4rem;
    }

    h4 {
        font-size: 1.5rem;
    }
}

@media screen and (min-width: 966px) {
    .heroBanner h1 {
        font-size: 8rem;
    }

    h2 {
    }

    h3 {
        font-size: 5rem;
    }

    h4 {
        font-size: 2rem;
    }

    .stepHeader p {
        font-size: 1.5rem;
    }

    .feature p,
    .getStartedContainer p {
        font-size: 1.2rem;
    }
}

.heroBanner {
    padding: 4rem 0;
    text-align: center;
    position: relative;
    overflow: hidden;
    background: var(--ifm-background-color);
}

@media screen and (max-width: 966px) {
    .heroBanner {
        height: calc(100vh - var(--ifm-navbar-height) - 4rem);
    }

    .heroBannerContent {
        padding: 2rem;
    }
}

@media screen and (min-width: 966px) {
    .heroBanner {
        height: calc(100vh - var(--ifm-navbar-height));
    }
}

@keyframes titleTo3d {
    from {
        text-shadow: none;
    }

    to {
        margin-left: 2px;
        text-shadow: -1px 1px var(--ifm-color-secondary-darkest),
        -2px 2px var(--ifm-color-secondary-darkest);
    }
}

@keyframes titleTo3dDesktop {
    from {
        text-shadow: none;
    }

    to {
        margin-left: 4px;
        text-shadow: -1px 1px var(--ifm-color-secondary-darkest),
        -2px 2px var(--ifm-color-secondary-darkest),
        -3px 3px var(--ifm-color-secondary-darkest),
        -4px 4px var(--ifm-color-secondary-darkest);
    }
}

.title3d {
    animation: 1s ease-in 0.2s 1 titleTo3d;
    animation-fill-mode: forwards;
    display: inline-block;
    white-space: nowrap;
}

@media screen and (min-width: 966px) {
    .title3d {
        animation: 1s ease-in 0.2s 1 titleTo3dDesktop;
        animation-fill-mode: forwards;
    }
}

.heroBackground {
    mask-image: linear-gradient(0deg, transparent 0%, white 20%, white 80%, transparent 100%);
    position: absolute;
    width: 100%;
    stroke: var(--ifm-color-emphasis-100);
    fill: var(--ifm-color-emphasis-100);
    pointer-events: none;
    max-width: 100%;
    max-height: 100%;
}

.headerBackgroundText {
    animation: 10s ease-in 0s infinite alternate heroBackground;
}

.headerBackgroundLines {
    animation: 10s ease-in 0s infinite alternate-reverse heroBackground;
}

@keyframes heroBackground {
    from {
        opacity: 1;
    }

    40% {
        opacity: 1;
        filter: blur(0px);
    }

    60% {
        opacity: 0;
        filter: blur(3px);
    }

    to {
        opacity: 0;
    }
}

.main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    max-width: 1248px;
    margin: 0 auto;
    padding: 2rem 1rem 0;
}

.buttons {
    display: flex;
    align-items: center;
    justify-content: center;
}

.features {
    display: flex;
    align-items: center;
    padding: 2rem 0;
    width: 100%;

    text-align: center;
}

.stepHeader {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 1rem
}

.step {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.stepLine {
    height: 80px;
    background: var(--ifm-color-primary);
    background: linear-gradient(0deg, var(--ifm-color-primary) 0%, transparent 100%);
    width: 2px;
}

.stepNumber {
    color: var(--ifm-font-color-base-inverse);;
    background: var(--ifm-color-primary);
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem;
}

.stepDetail {
    display: grid;
}

@media screen and (max-width: 966px) {
}

@media screen and (min-width: 966px) {
    .stepDetail {
        grid-template-columns: 1fr 1fr;
        grid-column-gap: 3rem;
        grid-row-gap: 3rem;
        align-items: center;
    }
}

.stepImage,
.benefitImage {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

@media screen and (max-width: 966px) {
    .stepImage,
    .benefitImage {
        padding-bottom: 1rem;
    }
}

@media screen and (min-width: 966px) {
    .stepImage {
        align-self: center;
    }
}

.stepFeatures {
    flex-direction: column;
}

.feature {
    display: flex;
    flex-direction: column;
}

@media screen and (max-width: 966px) {
    .feature {
        text-align: center;
        align-items: center;
        justify-content: center;
        padding: 1rem;
    }
}

.featureIcon {
    width: 48px;
    height: 48px;
    background: var(--ifm-background-surface-color);
    padding: 8px;
    border-radius: var(--ifm-global-radius);
    border: 1px solid var(--ifm-font-color-secondary);
    color: var(--ifm-font-color-secondary);
    margin-bottom: 1rem;
}

.imagePlaceholder {
    background: var(--ifm-color-secondary-lightest);
    border: 1px solid var(--ifm-color-secondary);
    border-radius: var(--ifm-global-radius);
    min-height: 200px;
    width: 100%;
    height: 100%;
}

.primitivesDemo {
    display: grid;
}

@media screen and (max-width: 966px) {
    .primitivesDemo {
        grid-template-columns: 1fr auto 1fr;
        grid-template-rows: auto 1.5rem 1fr;
    }
}

@media screen and (min-width: 966px) {
    .primitivesDemo {
        grid-template-columns: 1fr auto 3rem;
        grid-template-rows: auto 3rem 1fr;
    }
}

.primitivesCode {
    grid-column: 1 / 4;
    grid-row: 1 / 3;
}

.primitivesBrowserWindow {
    grid-column: 2;
    grid-row: 2 / 4;
    z-index: 1;
}

.primitivesImg {
    fill: var(--ifm-font-color-base);
    stroke: var(--ifm-font-color-base);
}

.browserContainer {
    border: 1px solid var(--ifm-color-secondary);
    border-radius: var(--ifm-global-radius);
    background: var(--ifm-background-surface-color);
    box-shadow: rgba(0, 0, 0, 0.12) 0px 8px 30px 0px;
}

.browserTopBar {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: center;
    padding: 0.5rem;
    border-bottom: 1px solid var(--ifm-color-secondary);
}

.browserUrl {
    grid-column: 2;
    display: flex;
    align-items: center;
    padding: 0.25rem 0.5rem;
    border: 1px solid var(--ifm-color-secondary);
    border-radius: var(--ifm-global-radius);
    background: var(--ifm-color-emphasis-100);
    color: var(--ifm-color-emphasis-700);
    font-size: 0.75rem;
}

.browserRefresh {
    width: 1rem;
    height: 1rem;
    margin-left: 0.5rem;
}

.browserContent {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.intersectionImage {
    fill: var(--ifm-font-color-base-inverse);
    stroke: var(--ifm-font-color-base);
}

.getStartedContainer {
    border-top: 1px solid var(--ifm-color-secondary);
    margin: 5rem 1rem 0;
    padding: 5rem 1rem;
}

.getStartedCard {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    text-align: center;
    border: 1px solid var(--ifm-color-secondary);
    border-radius: var(--ifm-global-radius);
    box-shadow: rgba(0, 0, 0, 0.12) 0px 8px 30px 0px;
    max-width: 400px;
}

@media screen and (min-width: 966px) {
    .getStartedContainer {
        margin: 5rem 3rem 0;
        padding: 5rem 3rem;
    }
}

.getStartedCard a:not(:last-of-type) {
    margin-bottom: 1rem;
}

.pixelImages {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    grid-template-rows: auto auto;
    grid-row-gap: 2rem;
}

.pixelCode {
    grid-column: 1 / 4;
    grid-row: 2;
}

.pixelImageBrowser {
    grid-column: 2;
    grid-row: 1;
    z-index: 1;
}

.pixelImage {
    display: grid;
    grid-gap: 1px;
    background: var(--ifm-color-secondary);
    border: 1px solid var(--ifm-color-secondary);
}

.pixel {
    background-color: var(--ifm-background-surface-color);
    text-align: center;
    animation: 3s ease-in 0s infinite alternate;
}

.pixel[data-color-index="1"] {
    animation-name: pixelBackgroundRed;
}

.pixel[data-color-index="2"] {
    animation-name: pixelBackgroundGreen;
}

.pixel[data-color-index="3"] {
    animation-name: pixelBackgroundBlue;
}

@keyframes pixelBackgroundRed {
    from, 50% {
        background-color: var(--ifm-background-surface-color);
    }

    75%, to {
        background-color: var(--ifm-color-danger);
    }
}

@keyframes pixelBackgroundGreen {
    from, 50% {
        background-color: var(--ifm-background-surface-color);
    }

    75%, to {
        background-color: var(--ifm-color-success);
    }
}

@keyframes pixelBackgroundBlue {
    from, 50% {
        background-color: var(--ifm-background-surface-color);
    }

    75%, to {
        background-color: var(--ifm-color-info);
    }
}

@media screen and (max-width: 1300px) {
    .pixelImage {
        grid-template-rows: repeat(10, 24px);
        grid-template-columns: repeat(10, 24px);
    }

    .pixel {
        font-size: 12px;
    }
}

@media screen and (min-width: 1300px) {
    .pixelImage {
        grid-template-rows: repeat(10, 32px);
        grid-template-columns: repeat(10, 32px);
    }

    .pixel {
        font-size: 16px;
    }
}
